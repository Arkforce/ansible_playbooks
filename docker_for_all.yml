---
- hosts: all
  become: true
  tasks:
    - name: Ensure prerequisites are installed (RHEL/CentOS)
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
      loop:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
      when: ansible_os_family == "RedHat"

    - name: Add Docker repository (RHEL/CentOS)
      ansible.builtin.command: >
        yum-config-manager
        --add-repo
        https://download.docker.com/linux/centos/docker-ce.repo
      when: ansible_os_family == "RedHat"

    - name: Ensure prerequisites are installed (Debian/Ubuntu)
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      when: ansible_os_family == "Debian"

    - name: Add Docker GPG key and repository (Debian/Ubuntu)
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker repository (Debian/Ubuntu)
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker (RHEL/CentOS)
      ansible.builtin.yum:
        name: docker-ce
        state: present
      when: ansible_os_family == "RedHat"

    - name: Install Docker (Debian/Ubuntu)
      ansible.builtin.apt:
        name: docker-ce
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Start and enable Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Add current user to Docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
